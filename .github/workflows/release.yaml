# .github/workflows/release.yml
name: goreleaser

on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  # packages: write
  # issues: write
  # id-token: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable
      - name: Install Cloudsmith CLI
        run: pip install --upgrade cloudsmith-cli
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN}}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          # either 'goreleaser' (default) or 'goreleaser-pro'
          distribution: goreleaser
          # 'latest', 'nightly', or a semver
          version: ${{ env.GITHUB_REF_NAME }}
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.PUBLISHER_TOKEN }}
      - name: Upload Linux binary only
        uses: actions/upload-artifact@v4
        with:
          name: vp-utils-binaries
          path: ./dist/vp-utils_linux_amd64_v1/vp-utils
      - name: Upload .deb via Cloudsmith CLI
        run: |
          for f in dist/vp-utils_*.deb; do
            cloudsmith push deb vojtechpastyrik/vp-utils/debian/bookworm "$f"
            cloudsmith push deb vojtechpastyrik/vp-utils/ubuntu/noble "$f"
          done
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
      - name: Upload .rpm to Cloudsmith via CLI
        run: |
          for f in dist/vp-utils_*.rpm; do
            cloudsmith push rpm vojtechpastyrik/vp-utils/fedora/40 "$f"
          done
        env:
          CLOUDSMITH_API_KEY: ${{ secrets.CLOUDSMITH_API_KEY }}
  docs-and-gitlab:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: vp-utils-binaries
          path: ./binary

      - name: Generate Documentation
        run: |
          chmod +x ./binary/vp-utils
          ./binary/vp-utils generate-docs

      - name: Push to GitLab
        run: |
          git config --global user.name "CI Bot"
          git config --global user.email "ci-bot@pastyrik.dev"
          git clone https://oauth2:${GITLAB_TOKEN}@gitlab.com/pastyrik.dev/doc.git gitlab-repo
          cp -r ./cobra-docs/* ./gitlab-repo/docs/cli/commands/
          cd gitlab-repo
          git add .
          git commit -m "chore(docs/cli/commands): Update cli documentation for version ${GITHUB_REF_NAME}" || echo "No changes to commit"
          git push
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}